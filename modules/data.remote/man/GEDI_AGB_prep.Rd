% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GEDI_AGB_prep.R
\name{GEDI_AGB_prep}
\alias{GEDI_AGB_prep}
\title{Prepare L4A GEDI above ground biomass (AGB) data for the state data assimilation (SDA) workflow.
This function is built upon the modified `l4_download` function within the `GEDI4R` package in need for a better parallel computation.}
\usage{
GEDI_AGB_prep(
  site_info,
  time_points,
  outdir = file.path(getwd(), "GEDI_AGB"),
  buffer = 0.01,
  search_window = "3 month"
)
}
\arguments{
\item{site_info}{A list including site_id, longitude, and latitude.}

\item{time_points}{A vector of date contains target dates (in YYYY-MM-DD).}

\item{outdir}{Directory where the final CSV file will be stored.}

\item{buffer}{buffer distance (in degrees) for locate GEDI AGB searching box (default is 0.01 [~ 1 km]).}

\item{search_window}{search window (any length of time. e.g., 3 month) for locate available GEDI AGB values.}
}
\value{
A data frame containing AGB and sd for each site and each time step.
}
\description{
Prepare L4A GEDI above ground biomass (AGB) data for the state data assimilation (SDA) workflow.
This function is built upon the modified `l4_download` function within the `GEDI4R` package in need for a better parallel computation.
}
\details{
During the first use, users will be ask to enter their Earth Explore
 login Information for downloading the data. If you don't have already an
 account, register at https://urs.earthdata.nasa.gov/users/new.
 These information will be saved in outdir as a netrc
 file. This function uses the foreach package for
 downloading files in parallel, with the
 doParallel configuration. If a file with the same
 name is already presented in outdir it will be overwrite.
}
\examples{
\dontrun{
settings <- PEcAn.settings::read.settings("pecan.xml")
site_info <- settings \%>\% 
  purrr::map(~.x[['run']] ) \%>\% 
  purrr::map('site')\%>\% 
  purrr::map(function(site.list){
    #conversion from string to number
    site.list$lat <- as.numeric(site.list$lat)
    site.list$lon <- as.numeric(site.list$lon)
    list(site_id=site.list$id, lat=site.list$lat, lon=site.list$lon, site_name=site.list$name)
  })\%>\% 
  dplyr::bind_rows() \%>\% 
  as.list()
time_points <- seq(start.date, end.date, by = time.step)
buffer <- 0.01
outdir <- getwd()
GEDI_AGB <- GEDI_AGB_prep(site_info, time_points, outdir, buffer)
}
}
\author{
Dongchen Zhang
}
